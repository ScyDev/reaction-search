Template.searchBox.onRendered(
	function() {
		Meteor.setTimeout(function() {
		  $("#searchBox").autocomplete({
		    minLength: 3
		  }, {
		    source: function(request, response) {
		      console.log("search term " + request.term);
		      return Meteor.call("searchProducts", request.term, function(error, result) {
		        if (error) {
		          console.log(error);
		        }
		        if (result) {
		          return response(result);
		        }
		      });
		    }
		  }).data("ui-autocomplete")._renderItem = function(ul, item) {
		    var listItemHtml;
		    listItemHtml = "<a href=\"/product/" + item.id + "\"> " + item.value + "\n  <span class=\"search-item-price\">\n    $" + item.price + "\n  </span>\n</a>";
				//listItemHtml = '<a href="'+ReactionRouter.pathFor('/product/', item.id)+'"> ' + item.value + '\n	<span class="search-item-price">\n		$' + item.price + '\n	</span>\n</a>';
		    return $("<li>").html(listItemHtml).appendTo(ul);
		  };

		  $('#searchBoxDate').datepicker();
			/*
		  return $("#searchBoxDate").autocomplete({
		    minLength: 8,
		    source: function(request, response) {
					let filterDate = new Date(request.term);
		      console.log("search date new: ",filterDate," old: ",Session.get('productFilters/forSaleOnDate'));
					Session.set('productFilters/forSaleOnDate', filterDate);
		      return Meteor.call("searchProductsByDate", request.term, function(error, result) {
		        if (error) {
		          console.log(error);
		        }
		        if (result) {
		          return response(result);
		        }
		      });
		    }
		  }).data("ui-autocomplete")._renderItem = function(ul, item) {
		    var listItemHtml;
//		    listItemHtml = '<a href="/product/' + item.id + '"> ' + item.value + '\n	<span class="search-item-price">\n		$' + item.price + '\n	</span>\n</a>';
				listItemHtml = '<a href="'+ReactionRouter.pathFor('product', item.id)+'"> ' + item.value + '\n	<span class="search-item-price">\n		$' + item.price + '\n	</span>\n</a>';
		    return $("<li>").html(listItemHtml).appendTo(ul);
		  };
			/*/

		}, 1000);
	}
);

Template.searchBox.events(
	{
			"change #searchBoxDate": function(event) {
				const value = event.target.value;
				let filterDate = new Date(value);
				console.log("search date new: ",filterDate," old: ",Session.get('productFilters/forSaleOnDate'));
				Session.set('productFilters/forSaleOnDate', filterDate);
			},

			/*
			or rather use moment lib, if necessary
			--> moment(new Date(inDate)).format('DD.MM.YYYY');

			searchResults = ReactionCore.Collections.Products.find({
			      "forSaleOnDate":  {
			        "$gte": new Date(date+"T00:00:00.000Z"),
			        "$lte": new Date(date+"T23:59:59.000Z")
			      }
			    }
			*/
	}
);

// ---
// generated by coffee-script 1.9.2
